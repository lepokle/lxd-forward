#!/usr/bin/bash
set -e

CALL=""
DRY_RUN=0
IPTABLES_PRE_RULE="PREROUTING --match addrtype --dst-type LOCAL --jump LXD_PRE"
IPTABLES_POST_RULE="POSTROUTING --jump LXD_POST"

function get_ip {
    HOST="$1"
    IFNAME="$2"
    IP=""
    
    while [ -z $IP ]; do
        echo "Probing [$HOST] for ip..." >&2
        IP=$(lxc info $HOST 2>/dev/null | grep -E $IFNAME':\s+inet\s+' | cut -f 3)
        sleep 1
    done

    echo $IP
}

function get_public_ip {
    echo $(ip route show default | awk '/default/ {print $3}')
}

function setup_rules {
    FORWARD_RULE="$1"
    PUBLIC_IP="$2"
    PARTS=(${FORWARD_RULE//:/ })
    if [ "${#PARTS[@]}" = 4 ]; then
        PROTOCOL="tcp"
        SRC_PORT="${PARTS[0]}"
        DEST_HOST="${PARTS[1]}"
        IFNAME="${PARTS[2]}"
        DEST_PORT="${PARTS[3]}"
    else
        PROTOCOL="${PARTS[0]}"
        SRC_PORT="${PARTS[1]}"
        DEST_HOST="${PARTS[2]}"
        IFNAME="${PARTS[3]}"
        DEST_PORT="${PARTS[4]}"
    fi

    if [ $DRY_RUN -eq 1 ]; then
        IP="<ip>"
    else
        IP=$(get_ip $DEST_HOST $IFNAME)
    fi
    echo "Found ip [$IP] for host [$DEST_HOST] on interface [$IFNAME]." >&2

    if [[ $SRC_PORT == *"-"* ]]; then
        SRC_PORT=$(echo $SRC_PORT | tr - :)
    fi

    echo "Set up ($PROTOCOL: $SRC_PORT -> $DEST_HOST:$DEST_PORT)..." >&2
    $CALL iptables --table nat --append LXD_PRE  --protocol $PROTOCOL --match $PROTOCOL --dport $SRC_PORT --jump DNAT --to-destination $IP:$DEST_PORT
    $CALL iptables --table nat --append LXD_POST --protocol $PROTOCOL --destination $IP --dport $SRC_PORT --jump SNAT --to-source $PUBLIC_IP
    echo >&2
}

if [ "$1" != "on" -a "$1" != "off" -a "$1" != "dry" ]; then
    echo "Must specify a valid command: on, off, dry."
    echo -e "\ton:  activate forwarding rules"
    echo -e "\toff: deactivate forwarding rules"
    echo -e "\tdry: show what would be done"
    exit 1
fi

if [ "$1" == "dry" ]; then
    echo "Doing DRY run. No changes will be made." >&2
    echo >&2
    CALL="echo -e \t"
    DRY_RUN=1
fi

echo "Cleanup current rules..." >&2
$CALL iptables -t nat -D $IPTABLES_PRE_RULE 2>/dev/null || /usr/bin/true
$CALL iptables -t nat -D $IPTABLES_POST_RULE 2>/dev/null || /usr/bin/true
$CALL iptables -t nat -F LXD_PRE 2>/dev/null || /usr/bin/true
$CALL iptables -t nat -X LXD_PRE 2>/dev/null || /usr/bin/true
$CALL iptables -t nat -F LXD_POST 2>/dev/null || /usr/bin/true
$CALL iptables -t nat -X LXD_POST 2>/dev/null || /usr/bin/true
echo "Cleaned up." >&2
echo >&2

if [ "$1" == "off" ]; then
    exit 0;
fi

CONFIG_FILE="$2"
if [ -z "$2" ]; then
    CONFIG_FILE=/etc/lxd-forward.conf
fi

echo "Setup chain [LXD] for rules..." >&2
$CALL iptables -t nat -N LXD_PRE
$CALL iptables -t nat -N LXD_POST
echo >&2

public_ip=$(get_public_ip)
while read -r line; do
    [[ "$line" =~ ^\s*$ ]] && continue
    [[ "$line" =~ ^\s*#.*$ ]] && continue

    echo "Setup forwarding rule...($line)" >&2
    setup_rules $line $public_ip
done < "$CONFIG_FILE"

echo "Activate forwarding rule..." >&2
$CALL iptables -t nat -A $IPTABLES_PRE_RULE
$CALL iptables -t nat -A $IPTABLES_POST_RULE
